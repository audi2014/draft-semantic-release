name: PR-Release
on:
  # Allow to trigger the workflow manually via the GitHub UI and also allow to
  # select a custom branch
  # @see https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read # for checkout

jobs:
  release:
    name: PR-Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      # basic setup
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      # node + pnpm + cache
      # https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            

      - name: Install ./ Dependencies
        run: pnpm install
      # Custom release steps
      - name: PACKAGE_NAME
        run: echo "PACKAGE_NAME=$(cut -d '=' -f 2 <<< $(npm run env | grep 'npm_package_name'))" >> $GITHUB_ENV
      - name: SHA_SHORT
        run: echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: BRANCH_NAME
        run: echo "BRANCH_NAME=$(echo ${{ github.head_ref || github.ref_name }} | sed -r 's/[/]+/-/g')" >> $GITHUB_ENV
      - name: VERSION
        run: echo "VERSION=$(echo v${{ env.BRANCH_NAME }}-${{ env.SHA_SHORT }})" >> $GITHUB_ENV
      - name: PR-Release
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          git config --global user.name 'github-actions-bot'
          git config --global user.email 'github-actions-bot@hive.com'
          pnpm version prerelease --preid ${{ env.VERSION }}
          pnpm publish --no-git-checks
      - uses: actions/github-script@v3
        name: Add release version to comments
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'This PR has been released to npm as version `'+ process.env.PACKAGE_NAME + '@' + process.env.VERSION + '`'
            })